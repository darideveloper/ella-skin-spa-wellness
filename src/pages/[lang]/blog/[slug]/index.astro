---
// Libs
import { getPost } from '../../../../libs/apis/blog'
import { useTranslations } from '../../../../i18n/utils'
import { getStaticPathsBlogPostsLangs } from '../../../../libs/getStaticPaths'
import { marked } from 'marked'

// Components
import Layout from '../../../../layouts/Layout.astro'
import Title from '../../../../components/ui/Title.astro'

// params
const { lang, slug } = Astro.params as any

// i18n
const t = useTranslations(lang)
export const getStaticPaths = getStaticPathsBlogPostsLangs

// Data
const postData = await getPost(lang, slug)

// Configure marked options
marked.setOptions({
  breaks: true,
  gfm: true,
})

// Render markdown content
const renderedContent = marked(postData.content)
---

<Layout>
  <div class:list={['container', 'py-24']}>
    <!-- Post Header -->
    <div class:list={['mb-12']}>
      <Title text={postData.title} />
      <div class:list={['mt-6', 'text-lg', 'text-black', 'leading-relaxed']}>
        {postData.description}
      </div>
      <div
        class:list={[
          'mt-8',
          'flex',
          'flex-wrap',
          'items-center',
          'gap-6',
          'text-sm',
          'text-brown-light',
        ]}
      >
        <div class:list={['flex', 'items-center', 'gap-2']}>
          <span>By {postData.author}</span>
        </div>
        <div class:list={['flex', 'items-center', 'gap-2']}>
          <span>{new Date(postData.created_at).toLocaleDateString()}</span>
        </div>
      </div>
    </div>

    <!-- Banner Image -->
    {
      postData.banner_image_url && (
        <div class:list={['mb-12']}>
          <img
            src={postData.banner_image_url}
            alt={postData.title}
            class:list={[
              'w-full',
              'h-96',
              'object-cover',
              'rounded-lg',
              'shadow-lg',
            ]}
          />
        </div>
      )
    }

    <!-- Post Content -->
    <article
      class:list={['prose', 'prose-lg', 'max-w-none', 'md-content', 'mx-8 md:mx-24']}
    >
      <Fragment set:html={renderedContent} />
    </article>

    <!-- Post Footer -->
    <div class:list={['mt-16', 'pt-8', 'border-t', 'border-brown-light']}>
      <div class:list={['flex', 'flex-wrap', 'gap-2']}>
        {
          postData.keywords
            .split(',')
            .map((keyword: string) => (
              <span
                class:list={[
                  'px-3',
                  'py-1',
                  'bg-pink-light',
                  'text-brown',
                  'rounded-full',
                  'text-sm',
                ]}
              >
                {keyword.trim()}
              </span>
            ))
        }
      </div>
    </div>
  </div>
</Layout>

<style>
  .prose {
    color: var(--color-black);
    font-family: var(--font-sans);
    line-height: 1.8;
  }

  .prose h1 {
    color: var(--color-brown);
    font-family: var(--font-title);
    font-size: 2.5rem;
    font-weight: 700;
    margin-top: 3rem;
    margin-bottom: 1.5rem;
  }

  .prose h2 {
    color: var(--color-brown);
    font-family: var(--font-title);
    font-size: 2rem;
    font-weight: 600;
    margin-top: 2.5rem;
    margin-bottom: 1rem;
  }

  .prose h3 {
    color: var(--color-brown-light);
    font-family: var(--font-title);
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 0.75rem;
  }

  .prose p {
    margin-bottom: 1.5rem;
    text-align: justify;
  }

  .prose strong {
    color: var(--color-brown);
    font-weight: 600;
  }

  .prose ul {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .prose li {
    margin-bottom: 0.5rem;
    list-style-type: square;
    color: var(--color-black);
  }

  .prose li::marker {
    color: var(--color-brown);
  }

  .prose blockquote {
    border-left: 4px solid var(--color-brown);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--color-brown-light);
    background-color: rgba(150, 89, 26, 0.05);
    padding: 1.5rem;
    border-radius: 0 8px 8px 0;
  }

  .prose a {
    color: var(--color-brown);
    text-decoration: underline;
    text-decoration-color: var(--color-brown-light);
    transition: all 0.3s ease;
  }

  .prose a:hover {
    color: var(--color-brown-light);
    text-decoration-color: var(--color-brown);
  }

  @media (max-width: 768px) {
    .prose h1 {
      font-size: 2rem;
    }

    .prose h2 {
      font-size: 1.75rem;
    }

    .prose h3 {
      font-size: 1.25rem;
    }

    .prose p {
      text-align: left;
    }
  }
</style>
