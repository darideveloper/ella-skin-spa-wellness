---
// Libs
import { getPost } from '../../../../libs/apis/blog'
import { useTranslations } from '../../../../i18n/utils'
import { getStaticPathsBlogPostsLangs } from '../../../../libs/getStaticPaths'
import { marked } from 'marked'

// Components
import Layout from '../../../../layouts/Layout.astro'
import Title from '../../../../components/ui/Title.astro'

// Styles
import '../../../../styles/markdown.css'

// params
const { lang, slug } = Astro.params as any

// i18n
const t = useTranslations(lang)
export const getStaticPaths = getStaticPathsBlogPostsLangs

// Data
const postData = await getPost(lang, slug)

// Configure marked options
marked.setOptions({
  breaks: true,
  gfm: true,
})

// Render markdown content
const renderedContent = String(marked(postData.content)).replace(/<h1/g, '<h2').replace(/<\/h1>/g, '</h2>')
---

<Layout>
  <div class:list={['container', 'py-24']}>
    <!-- Post Header -->
    <div class:list={['mb-12']}>
      <Title text={postData.title} />
      <div class:list={['mt-6', 'text-lg', 'text-black', 'leading-relaxed']}>
        {postData.description}
      </div>
      <div
        class:list={[
          'mt-8',
          'flex',
          'flex-wrap',
          'items-center',
          'gap-6',
          'text-sm',
          'text-brown-light',
        ]}
      >
        <div class:list={['flex', 'items-center', 'gap-2']}>
          <span>By {postData.author}</span>
        </div>
        <div class:list={['flex', 'items-center', 'gap-2']}>
          <span>{new Date(postData.created_at).toLocaleDateString()}</span>
        </div>
      </div>
    </div>

    <!-- Banner Image -->
    {
      postData.banner_image_url && (
        <div class:list={['mb-12']}>
          <img
            src={postData.banner_image_url}
            alt={postData.title}
            title={postData.title}
            class:list={[
              'w-full',
              'h-96',
              'object-cover',
              'rounded-lg',
              'shadow-lg',
            ]}
          />
        </div>
      )
    }

    <!-- Post Content -->
    <article
      class:list={['markdown-content', 'max-w-none', 'mx-8 md:mx-24']}
    >
      <Fragment set:html={renderedContent} />
    </article>

    <!-- Post Footer -->
    <div class:list={['mt-16', 'pt-8', 'border-t', 'border-brown-light']}>
      <div class:list={['flex', 'flex-wrap', 'gap-2']}>
        {
          postData.keywords
            .split(',')
            .map((keyword: string) => (
              <span
                class:list={[
                  'px-3',
                  'py-1',
                  'bg-pink-light',
                  'text-brown',
                  'rounded-full',
                  'text-sm',
                ]}
              >
                {keyword.trim()}
              </span>
            ))
        }
      </div>
    </div>
  </div>
</Layout>


