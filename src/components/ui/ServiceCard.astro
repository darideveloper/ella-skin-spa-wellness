---
import type { IconType } from 'react-icons';
import { FaBars, FaBowlingBall, FaBity, FaBorderAll } from "react-icons/fa6";
import Button from './Button.astro';
import { marked } from 'marked';
import { useTranslations } from "../../i18n/utils";
import { getStaticPathsLangs } from "../../libs/getStaticPaths";

// i18n
export const getStaticPaths = getStaticPathsLangs;
const { lang } = Astro.params as any;
const t = useTranslations(lang);

const buttonTrue = t('buttonTrue.text');
const buttonFalse = t('buttonFalse.text');

// Iconos
const icons = {
  serviceIcons: FaBars,
  tratamientosCorporales: FaBowlingBall,
  masajesRelajantes: FaBity,
  EsteticaAvanzada: FaBorderAll,
};

interface Props {
  title: string;
  text: string;
  description: string;
  benefits?: string[];
  class?: string;
  iconName: string;
}

const {
  title,
  text,
  description,
  benefits = [],
  iconName,
  class: className = "",
} = Astro.props as Props;

const Icon: IconType = icons[iconName] || FaBars;
const htmlText = marked.parse(text || "");
---

<article
  class:list={[
    "relative",
    "bg-white",
    "p-8",
    "rounded-3xl",
    "shadow-xl hover:shadow-2xl",
    "duration-500",
    "max-w-md",
    "mx-auto",
    "overflow-hidden",
    "group",
    className,
  ]}
>
  <!-- Círculo decorativo -->
  <div
    class:list={[
      "absolute",
      "-top-8",
      "-right-8",
      "w-32",
      "h-32",
      "bg-gradient-to-br",
      "from-pink",
      "to-pink-light",
      "rounded-full",
      "opacity-10 group-hover:opacity-20",
      "duration-500",
    ]}
  />

  <div class:list={["relative", "z-10"]}>
    <!-- Icono -->
    <div
      class:list={[
        "w-16",
        "h-16",
        "bg-gradient-to-br",
        "from-brown",
        "to-brown-light",
        "rounded-2xl",
        "flex",
        "items-center",
        "justify-center",
        "mb-6",
        "group-hover:scale-110",
        "duration-300",
      ]}
    >
      <span class:list={["text-white", "text-3xl"]}>
        <Icon />
      </span>
    </div>

    <!-- Título -->
    <h3
      class:list={[
        "font-title",
        "text-2xl",
        "text-brown group-hover:text-brown-light",
        "mb-4",
        "leading-tight",
        "duration-300",
      ]}
    >
      {title}
    </h3>

    <!-- Descripción -->
    <p class:list={["text-black", "text-sm", "leading-relaxed", "mb-6"]}>
      {description}
    </p>

    <!-- Texto con Markdown -->
    <div
      class:list={["text-xs", "text-black", "leading-relaxed", "mb-6", "prose"]}
      set:html={htmlText}
    />

    <!-- Beneficios -->
    {
      benefits.length > 0 && (
        <div class:list={["mb-6"]}>
          <h4 class:list={["text-sm", "font-semibold", "text-brown", "mb-3"]}>
            Incluye:
          </h4>
          <div class:list={["space-y-2"]}>
            {benefits.map((benefit) => (
              <div
                class:list={[
                  "flex",
                  "items-start",
                  "text-xs",
                  "text-black",
                ]}
              >
                <div
                  class:list={[
                    "w-1.5",
                    "h-1.5",
                    "bg-pink",
                    "rounded-full",
                    "mt-1.5",
                    "mr-3",
                    "flex-shrink-0",
                  ]}
                />
                <span>{benefit}</span>
              </div>
            ))}
          </div>
        </div>
      )
    }

    <!-- Botones -->
    <div class:list={["flex", "gap-3"]}>
      <Button text={buttonTrue} href="/www.google.com" isGhost />
      <Button text={buttonFalse} href="/www.google.com" isGhost={false} />
    </div>
  </div>
</article>
