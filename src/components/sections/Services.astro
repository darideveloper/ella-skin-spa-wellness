---
// Layout
import Layout from '../../layouts/Layout.astro'

// Libs
import { useTranslations } from '../../i18n/utils'
import { marked } from 'marked'

// i18n
const { lang } = Astro.params as any
const t = useTranslations(lang)

// Components
import ServiceCard from '../../components/ui/ServiceCard.astro'

// data imports
import { servicesData } from '../../data/servcies'

// Fill data with translations
const services = Object.keys(servicesData).map((key) => ({
  icon: servicesData[key as keyof typeof servicesData].icon,
  title: marked.parse(t(`services.cards.${key}.name`)),
  description: marked.parse(t(`services.cards.${key}.description`)),
  features: t(`services.cards.${key}.features`).map((feature: string) =>
    marked.parseInline(feature)
  ),
  textButtonPrimary: t(`services.cards.${key}.textButtonPrimary`),
  srcButtonPrimary: t(`services.cards.${key}.srcButtonPrimary`),
  textButtonSecond: t(`services.cards.${key}.textButtonSecond`),
  srcButtonSecond: t(`services.cards.${key}.srcButtonSecond`),
  key: key,
}))
---

<section class:list={[
  'container',
  'grid',
  'gap-16',
  'grid-cols-1 md:grid-cols-2',
  '!max-w-5xl'
]}>
  {
    services.map((service) => (
      <ServiceCard
        key={service.key}
        title={service.title as string}
        description={service.description as string}
        icon={service.icon}
        benefits={service.features}
        textButtonPrimary={service.textButtonPrimary}
        srcButtonPrimary={service.srcButtonPrimary}
        textButtonSecond={service.textButtonSecond}
        srcButtonSecond={service.srcButtonSecond}
      />
    ))
  }
</section>
